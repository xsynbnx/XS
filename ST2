import base64
exec(base64.b64decode('import os
import subprocess
import signal
import time
from pathlib import Path

# 颜色定义
class Colors:
    RESET = "\033[0m"
    RED = "\033[31m"
    GREEN = "\033[32m"
    YELLOW = "\033[33m"
    BLUE = "\033[34m"
    CYAN = "\033[36m"
    BOLD = "\033[1m"
    PURPLE = "\033[35m"

class MusicPlayer:
    def __init__(self):
        self.current_song = ""
        self.mpv_process = None
        self.current_index = -1
        
        # 音乐库配置
        self.music_dir = str(Path(__file__).parent / "Music")
        self.song_list = [
            ("鸡叫.mp3", "1. 鸡柳版明明就"),
            ("天真的橡皮DJ.mp3", "2. 天真的橡皮"),
            ("安和桥.mp3", "3. 安和桥"),
            ("悬溺.mp3", "4. 悬溺"),
            ("八方来财DJ.mp3", "5. 八方来财"),
            ("罗生门.mp3", "6. 罗生门"),
            ("小孩.mp3", "7. 小孩"),
            ("4.mp3", "8. 我的好兄弟"),
            ("第57次取消发送.mp3", "9. 第57次取消发送"),
            ("野人.mp3", "10. 野人"),
            ("鸡柳1.mp3", "11. 鸡柳版第57次取消发送"),
            ("天下.mp3", "12. 天下"),
            ("下一个天亮.mp3", "13. 下一个天亮"),
            ("父亲.mp3", "14. 父亲"),
            ("最后一首歌.mp3", "15. 最后一首歌")  # 添加第15首歌
        ]

    def check_mpv(self):
        try:
            subprocess.run(["mpv", "--version"], check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            return True
        except:
            print(f"{Colors.YELLOW}检测到系统未安装mpv播放器{Colors.RESET}")
            install_choice = input("是否自动安装? [Y/n] ").strip().lower()
            if install_choice != 'n':
                print(f"{Colors.BLUE}正在安装mpv...{Colors.RESET}")
                try:
                    if os.path.exists("/etc/debian_version"):
                        subprocess.run(["sudo", "apt", "update"], check=True)
                        subprocess.run(["sudo", "apt", "install", "-y", "mpv"], check=True)
                    elif os.path.exists("/etc/redhat-release"):
                        subprocess.run(["sudo", "dnf", "install", "-y", "mpv"], check=True)
                    elif os.path.exists("/usr/local/bin/brew"):
                        subprocess.run(["brew", "install", "mpv"], check=True)
                    else:
                        print(f"{Colors.RED}无法自动安装，请手动安装mpv{Colors.RESET}")
                        return False
                    
                    # 验证安装
                    subprocess.run(["mpv", "--version"], check=True)
                    print(f"{Colors.GREEN}mpv安装成功！{Colors.RESET}")
                    time.sleep(1)
                    return True
                except:
                    print(f"{Colors.RED}mpv安装失败，请手动安装后重试{Colors.RESET}")
                    return False
            else:
                print(f"{Colors.RED}必须安装mpv才能使用本播放器{Colors.RESET}")
                return False

    def play_song(self, index):
        if index < 0 or index >= len(self.song_list):
            print(f"{Colors.RED}错误: 无效的歌曲索引{Colors.RESET}")
            return False
        
        song_file, song_name = self.song_list[index]
        full_path = str(Path(self.music_dir) / song_file)
        
        if not os.path.exists(full_path):
            print(f"{Colors.RED}错误: 找不到文件 {full_path}{Colors.RESET}")
            return False
        
        # 如果已经在播放这首歌，不重复播放
        if index == self.current_index and self.mpv_process and self.mpv_process.poll() is None:
            print(f"{Colors.YELLOW}已在播放: {Colors.CYAN}{song_name}{Colors.RESET}")
            return True
        
        self.stop_song()
        
        print(f"{Colors.GREEN}正在播放: {Colors.CYAN}{song_name}{Colors.RESET}")
        self.current_song = song_name
        self.current_index = index
        
        # 使用nohup和mpv的--loop选项
        self.mpv_process = subprocess.Popen(
            ["mpv", "--no-video", "--loop", "--really-quiet", full_path],
            stdout=subprocess.DEVNULL,
            stderr=subprocess.DEVNULL,
            preexec_fn=os.setpgrp
        )
        return True

    def stop_song(self):
        if self.mpv_process:
            try:
                os.killpg(os.getpgid(self.mpv_process.pid), signal.SIGTERM)
            except:
                pass
            self.mpv_process = None
        
        self.current_song = ""
        self.current_index = -1
        print(f"{Colors.RED}已停止播放{Colors.RESET}")
        
        # 确保没有残留的mpv进程
        subprocess.run(["pkill", "-f", "mpv --no-video --loop --really-quiet"], 
                      stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

    def show_menu(self):
        os.system('clear' if os.name == 'posix' else 'cls')
        print(f"{Colors.PURPLE}{Colors.BOLD}🎵 小酥翼KDV 🎵{Colors.RESET}")
        print(f"{Colors.BLUE}__________________________{Colors.RESET}")
        
        for i, (_, name) in enumerate(self.song_list):
            print(f" {Colors.GREEN}{name}{Colors.RESET}")
        
        print(f"{Colors.BLUE}------------------------------{Colors.RESET}")
        print(f" {Colors.YELLOW}16. 退出程序{Colors.RESET}")
        print(f" {Colors.RED}s. 停止播放{Colors.RESET}")
        print(f"{Colors.BLUE}------------------------------{Colors.RESET}")
        
        # 播放状态
        if self.mpv_process and self.mpv_process.poll() is None:
            print(f"{Colors.YELLOW}▶ 当前播放: {Colors.CYAN}{self.current_song}{Colors.RESET}")
            print(f"{Colors.BLUE}提示:请不要重复点击同一首音乐{Colors.RESET}")
        else:
            print(f"{Colors.YELLOW}⏹ 当前没有播放音乐{Colors.RESET}")
        
        return input("\n请输入选择编号: ").strip()

    def run(self):
        if not self.check_mpv():
            return
        
        while True:
            choice = self.show_menu()
            
            if choice.isdigit():
                index = int(choice) - 1
                if 0 <= index < len(self.song_list):
                    self.play_song(index)
                    time.sleep(1)
                elif index == 15:  # 退出选项
                    if self.mpv_process and self.mpv_process.poll() is None:
                        print(f"{Colors.GREEN}退出脚本！{Colors.RESET}")
                        print(f"{Colors.BLUE}音乐将继续播放，使用 'pkill mpv' 可彻底停止{Colors.RESET}")
                    else:
                        print(f"{Colors.GREEN}感谢使用，再见！{Colors.RESET}")
                    time.sleep(2)
                    break
                else:
                    print(f"{Colors.RED}无效的编号，请重新输入{Colors.RESET}")
                    time.sleep(1)
            elif choice.lower() == 's':
                self.stop_song()
                time.sleep(1)
            else:
                print(f"{Colors.RED}无效输入，请重新选择{Colors.RESET}")
                time.sleep(1)

if __name__ == "__main__":
    player = MusicPlayer()
    player.run()').decode('utf-8'))